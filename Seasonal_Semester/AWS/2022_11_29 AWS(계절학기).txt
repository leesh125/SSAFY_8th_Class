● 클라우드
  - IT 자원을 인터넷 연결하여 빌려 사용한다.
  - 프로그래밍 방식으로 인프라를 관리
  - 유연한 인프라
  - 사용하는 만큼 비용을 내는 구조
  - 필요한 인프라를 빠르게 구매
  - 글로벌 인프라 이용

● AWS(Amazon Web Services)
  - AWS는 컴퓨팅, 스토리지, 데이터베이스와 같은 인프라 기술부터 기계 학습 및 인공지능,
    데이터 레이크 및 분석, 사물 인터넷을 it 서비스로 제공

● AWS를 사용하는 방법
  ○ Management Console
    - 사용이 간편하다
    - GUI라 보기가 쉽다.
    - 사용자 지정 비밀번호로 로그인 할 수 있다.

  ○ AWS CLI
    - Linux, macOs 또는 Windows 명령 프로그램에서 실행될 수 있는 유틸리티 묶음을 제공

  ○ AWS SDK
    - 선호하는 개발 언어 또는 플랫폼으로 AWS 서비스에 액세스하고 관리

● AWS 글로벌 인프라
  ○ AWS 리전
    - 최소 3개의 가용영역으로 구성되어 있는 AWS 인프라 단위
    - 현재 29개의 리전 보유

  ○ AWS 가용영역
    - AWS의 데이터센터 모음
    - 다른 가용영역 간의 장애로부터 자유로움

  ○ AWS 엣지 로케이션
    - 리전과 비교했을 때 최종 사용자와 더 가까이 존재하는 글로벌 인프라
    - 보안, 가용성, 비용 효울성, 속도 면에서 향상된 성능

● AWS 기초 서비스
  - Amazon Elastic Compute Cloud(EC2) - 컴퓨터 한대를 빌림
  - Virtual Private Clode(VPC)
  - Simple Storage Service(S3) - 파일 스토리지

● IP주소: 인터넷에서 서로 통신하기 위해 부여하는 고유한 주소
  - 두 가지 종류 : IPV4, IPV6
  - 두 가지 종류 : 사설 IP, 공인 IP

● IPV4
  - 총 32비트로 구성: 2^32개
  - 약 6억개는 예약되어 있음
  - 인터넷의 폭발적인 성장으로 인해 가용한 IP주소가 거의 고갈
  - 128비트를 사용하는 IPV6가 새로운 표준으로 제안

● CIDR(Classless Inter Domain Routing)
  - VLSM(Variable Length Subnet Mask)
  - Network

● VPC
  - AWS 클라우드 안의 사용자가 정의한 가상의 네트워크
  - VPC 안에서 내 리소스를 생성 가능
  - 한 리전안에 5개까지 생성 가능
  - 네트워크를 IP 주소 범위로 격리시킴
  - VPC 안에서 서브넷(프라이빗, 퍼블릭)
  - 서브넷과 가용영역
  - VPC 안에서의 보안
  - 인터넷 액세스를 허용 여부(인터넷 게이트)

● Internet Gateway
  - 수평 확장되고 가용성이 높은 중복 vpc 구성 요소로, VPC와 인터넷 간에 통신을 하게 해줌
  - 인터넷 게이트웨이를 생성하는 경우 비용이 별도로 발생하지는 않으나,
    외부와 인터넷 통신을 원하지 않는 경우 사용하지 않을 수 있음

● 보안그룹
  - EC2 혹은 다른 AWS 리소스에 도달하고 나갈 수 있는 트래픽을 제어합니다.
  - 포트넘버/ 프로토콜/ 소스IP 주소 등을 활용해 트래픽을 제어합니다.

● NACL
  - 네트워크 ACL은 1개 이상의 서브넷 내부와 외부의 트래픽을 제어하기 위한 방화벽

● AWS EC2
  - 컴퓨팅 파워의 규모를 자유자재로 변경할 수 있는 컴퓨팅 서비스
  - 새로운 서버 인스턴스 확보 및 부팅 시간을 단축
  - Virtual Machine
  - Linux 또는 Windows, Ubuntu 등 다양한 OS 지원
  - 사용하는 용량만큼 비용 지불

● AMI
  - 인스턴스를 시작하는데 필요한 정보를 제공하는 AWS 에서 유지 관리되는 이미지
    (운영체제, 애플리케이션, 라이브러리 등을 포함)
  - AWS 계정을 제어하는 시작 권한
  - 시작될 때 연결한 볼륨을 지정하는 블록 디바이스 매핑
  - 똑같은 이미지로 수백 수천 개의 인스턴스를 생성

● S3
  - 최고의 확장성, 데이터 가용성, 성능을 갖추고 있는 스토리지 서비스
  - 백업 및 복원, 정적 웹사이트 배포, 빅데이터 분석 등 다양한 사용 사례에서 원하는 양의 데이터를 저장하고 사용

  ○ 객체
    - 1개의 데이터와 키, 메타 데이터를 합친 용어
    - 객체마다 고유한 키 값을 가지고, URL을 가지고 있어서 웹으로 호출이 가능

  ○ S3 객체
    - 웹 기반의 객체 스토리지

  ○ S3 특징
    - 완전 관리형 서비스로 높은 가용성과 고도의 확장성을 가짐
    - 이벤트 트리거 기능 제공
    - 객체 잠금 기능으로 조직 및 규정 준수 요구사항에 맞게 데이터 관리 가능


※ 왜 서버를 인스턴스라고 부를까?
  -> 객체지향 클래스로 찍어낸 결과 = 인스턴스
      리눅스 운영체제 컴퓨터가 만들어지는 틀이 있음, 그 틀로 만들어내는 컴퓨터는 서버

※ 운영체제란?
  -> 컴퓨터 자원관리 + 사용자와의 인터페이스

※ 커널이란?
  -> 컴퓨터 자원관리 담당

※ 리눅스
  -> 컴퓨터 운영 체제의 하나이며, 그 커널을 뜻한다.

※ Putty
  -> Secure Shell을 윈도우에서 사용할 수 있도록 하는 애플리케이션

※ Shell
  -> 커널을 감싸고 있음, 사용자의 명령을 해석해서 커널에게 전달하는 명령어 해석기

※ Secure Shell
  -> 네트워크를 통해서 쉘에다가 안전하게 명령어를 전달할 수 있는 수단이 SSH(암호화 되어있음)

※ 암호화
  - 대칭키 : 하나의 비밀키를 이용해서 암호화를 수행, 그 암호문을 같은 키로 복호화하면 원본이 나옴
  
  - 공개키 : 하나의 키를 공개함, 이를 복호화하려면 개인키가 필요함(역도 똑같음)

x = `rpm -qa | grep java-1.8.0-openjdk-devel`
if  [ ${#x} -eq 0 ]; then
	sudo yum -y install java-1.8.0-openjdk-devel
fi