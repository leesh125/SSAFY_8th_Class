● Open API(Application Programming Interface)
  - 프로그래밍에서 사용할수 있는 개방되어 있는 상태의 Interface

● REST(Representation State Transfer)
  - 하나의 URI는 하나의 고유한 리소스를 대표하도록 설계된다는 개념에 전송방식을 결합해서 원하는 작업을 지정
  - 웹의 장점을 최대한 활용할 수 있는 아키텍처
  - HTTP URI를 통해 제어할 자원을 명시하고, 
    HTTP Method(GET,POST,PUT,DELETE)를 통해 해당 자원을 제어하는 명령을 내리는 방식의 아키텍처

● REST 구성
  - 자원(Resource) - URI
  - 행위(Verb) - HTTP Method
  - 표현(Representations)

● 기존 Service와 REST Service
  - 기존 Service: 요청에 대한 처리를 한 후 가공된 data를 이용하여 특정 플랫폼에 적합한 형태의 View로 만들어 반환
  
  - REST Service : data처리만 한다거나, 처리 후 반환될 data가 있다면 JSON이나 XML 형식으로 전달.
                       View에 대해서는 신경 X 

● Jackson library
  - jackson-databind 라이브러리는 객체를 JSON 포맷의 문자열로 변환시켜서 브라우저로 전송한다.
  - jackson-dataformat-xml 라이브러리는 객체를 xml로 브라우저로 전송한다.

● REST 관련 Annotation
- @RestController: Controller가 REST 방식을 처리하기 위한 것임을 명시
- @ResponseBody: JSP 같은 뷰로 전달되는 것이 아니라 데이터 자체를 전달
- @PathVariable: URL 경로에 있는 값을 파라미터로 추출
- @CrossOrigin: Ajax의 크로스 도메인 문제를 해결
- @RequestBody: JSON 데이터를 원하는 타입으로 바인딩
