● N개 정점을 가진 그래프에서 N개 정점을 모두 연결하기 위해 N-1(최소 간선 수)개 간선을 선택하여 만든 트리

● Prim 알고리즘
  - 하나의 정점에서 연결된 간선들 중에 하나씩 선택하면서 MST를 만들어 가는 방식
    1. 임의 정점을 하나 선택해서 시작
    2. 선택한 정점과 인접하는 정점들 중의 최소 비용의 간선이 존재하는 정점을 선택
    3. 모든 정점이 선택될 때 까지 1,2 과정 반복

  - 서로소인 2개의 집합(2 disjoing-sets) 정보를 유지
    - 트리 정점들(tree vertices) - MST를 만들기 위해 선택된 정점들
    - 비트리 정점들(non-tree vertices) - 선택되지 않은 정점들


● 최단 경로(가중치가 없으면: 간선의 수가 비용)
  - 간선의 가중치가 있는 그래프에서 두 정점 사이의 경로들 중에 간선의 가중치의 합이 최소인 경로

  - 하나의 시작 정점에서 끝 정점까지의 최단 경로
    ○ 다익스트라(dijkstra) 알고리즘
      - 음의 가중치를 허용하지 않음
    ○ 벨만-포드(Bellman-Ford) 알고리즘
      - 음의 가중치를 허용
  
  - 모든 정점들에 대한 최단 경로
    ○ 플로이드-워샬(Floyd-Warshall) 알고리즘

● Dijkstra 알고리즘
  - 시작정점에서 다른 모든 정점으로의 최단 경로를 구하는 알고리즘
  - 시작정점에서의 거리가 최소인 정점을 선택해 나가면서 최단 경로를 구하는 방식
  - greedy 기법을 사용한 알고리즘으로 MST의 프림 알고리즘과 유사하다.


● 위상정렬
  - 유향 그래프의 정점들의 변의 방향을 거스르지 않도록 나열하는 것을 의미
  - 순서가 정해져 있는 작업들을 차례대로 수행해야 할 때, 그 순서를 결정해주는 알고리즘
  - 선후 관계가 정의된 그래프 구조 상에서 선후 관계에 따라 정렬하기 위해 위상 정렬을 이용
  - 위상 정렬이 성립하기 위해서는 반드시 그래프의 순환이 존재하지 않아야 한다.

  ○ BFS 사용
    1. 진입 차수가 0인 노드(시작점)을 큐에 모두 넣음
    2. 큐에서 진입 차수가 0인 노드를 꺼내어 자신과 인접한 노드의 간선을 제거
      -> 인접한 노드의 진입 차수를 1 감소시킨다.
    3. 간선 제거 후 진입 차수가 0이 된 노드를 큐에 넣는다.
    
    - 큐가 공백 큐 상태가 될 때까지 2~3 작업 반복
      -> 모든 노드가 다 처리되었다면 위상 정렬 완선
      -> 모든 노드가 다 처리되지 않았다면 사이클링 발생