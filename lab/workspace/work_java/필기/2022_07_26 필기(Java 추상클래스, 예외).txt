● 추상 클래스 (abstract)
  - 미완성 클래스, 객체 생성 불가, 하위 클래스 요구됨(강제성)

  -- 추상 메소드 有 : 반드시 재정의 책임   ->  미구현 시 하위 클래스도 추상 클래스가 됨
  -- 추상 메소드 無 : 선택적 재정의

● 추상 메소드
  - 구현부 없이 선언으로만 이루어진 메소드

● 인터페이스
  - 사용자 관점 : 사용 방법
             서로 약속
  - 구현자 관점: 약속된 기능에 대한 구현 책임

  -> 구현과 사용의 분리

  ○ 특징
  1. 클래스가 아님 -> 객체 생성 X
  2. 다중상속
  3. is a 관계로 표현하기 어려운 관계를 나타냄
  4. java8 이전 : 상수(static final) + 추상메소드
     java8 이후 : 상수 + 추상메소드 + default 메소드 + static 메소드
  5. 인터페이스 끼리도 상속가능(다중상속)

● 예외처리(Exception Handling)
 - checked Exception : 컴파일러(컴파일타임에)가 감지하는 예외 => 예외처리 필수

 - un-checked Exception : 컴파일러가 감지하지 못하는 예외 -> 예외처리 선택
                                 (Runtime Exception 유형)

  ○ 예외처리 방법
    1. 예외 발생한 곳에서 직접 처리
       - try~catch~finally  

    2. 예외 발생하면 호출자로 던져서 처리(간접적 처리)
       - throw
