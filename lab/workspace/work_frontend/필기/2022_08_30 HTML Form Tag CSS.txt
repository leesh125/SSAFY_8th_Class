● Web Architecture
  ○ Client == Browser
    - html : 우리 눈의 보여지는 것(뼈대)
    - css : 디자인
    - script(JS) : 기능(행동)

    -> 데이터 발생

  ○ Server
    - Web Server
    - DB

● HTML
  - 마크업 언어로 웹 문서를 작성하며 tag를 사용하여 문서의 구조 등을 기술하는 언어

  ○ tag와 속성
    - tag 는 시작 tag와 종료tag로 쌍을 이루거나 시작 tag만 존재하는 tag도 있다
    
    ○ 글로벌 속성: HTML tag에는 어느 tag에나 넣어서 사용할 수 있는 속성
      - class: tag에 적용할 스타일의 이름을 지정(중복 O)
      - id : tag에 유일한 ID를 지정함. 자바스크립트에서 주로 사용
      - dir : 내용의 텍스트 방향을 지정(ltr:왼쪽>오른쪽, rtl:오른쪽 왼쪽) = 정렬과 비슷함
      - style : 인라인 스타일을 적용하기 위해 사용
      - title : tag에 추가 정보를 지정

  ○ Head 요소 - 문서 머리글(head), 제목(title)
    - <head> : 브라우저에게 HTML문서의 머리 부분임을 인식
    - <title> : 문서의 제목을 의미

  ○ Body 요소
    - Web Browser에 보여질 문서의 내용을 작성

  ○ 특수문자
    - &nbsp; non-breaking space(공백)  출력: 
    - &lt; less than 출력: <
    - &gt; greater than 출력: >
    - &amp; ampersand 출력: &
    - &quot; quotation mark  출력: "
    - &apos; apostrophe  출력: '
    - &copy; copyright  출력: ⓒ
    - &reg; registered trademark 출력: ⓡ

  ○ 포맷팅 요소 : 화면에는 동일하게 출력되지만 각 요소가 가진 의미가 다른 것이 있다

  ○ 포맷팅 요소
    - 목록 tag는 하나 이상의 하위 tag를 포함
    - 목록 tag는 각 항목을 들여쓰기로 표현

   - ul : 번호 없는 목록, 항목 앞에 심볼을 표시
   - ol : 번호 있는 목록을 표시, 숫자(1), 알파벳(a,A) 로마숫자(i,I)
   - li : 목록 항목 ul ol tag 하위에서 사용 

  ○ table
    - 행과 열로 셀에 표시
    - table의 셀은 머리글(<th>), 데이터(<td>)를 가질 수 있음
    
    - 행 그룹 요소
      - 행 그룹 요소에는 머리글(<thead>), 본체항목(<tbody>), 바닥글(<tfoot>)
   
    - 열 그룹 요소
      - table 열 그룹 요소는 table 내에서 구조적인 분리를 가능케함
      - <colgroup> 요소는 명시적인 열 그룹을 만들며, <col> 요소는 열을 묶어 그룹핑함
 
    - border
      - cellspacing : cell과 cell 사이의 공간
      - cellpadding : cell외곽과 cell 컨텐츠 사이 공간

  ○ 이미지 요소 - img
    - <img> 태그 사용, src 속성은 이미지 경로를 지정하기 위해 사용(상대경로, URL 모두 가능)

  ○ 링크 요소 - Anchor
    - <a> tag를 사용하며, 하나의 문서에서 다른 문서로 연결하기 위해(하이퍼링크) 사용
   
    - target
      - _blank : 링크 내용이 새 창이나 새 탬에서 열린다
      - _self : target 속성의 기본 값으로 링크가 있는 화면에서 열린다.
      - _parent: 프레임을 사용했을 때 링크 내용을 부모 프레임에 표시
      - _top: 프레임을 사용했을 때 프레임에서 벗어나 링크 내용을 전체 화면으로 표시
  
    - #anchor
      - 같은 페이지 안에서 특정 요소를 클릭 시 그 위치로 한 번에 이동시킨다.
      - ex. <a href="#anchor name"> text or image</a>
  
    - map
      - 하나의 이미지에 여러 개의 link( Click 위치에 따라 서로 다른 link)
      - <map name = "map name"> <area><area> </map>
      - 이미지에 영역을 표시 할 때 <area> 사용
      - area의 속성은 href(링크 경로), target(링크 표시 대상), shape(링크로 사용할 영역의 형태)등
      - shape의 값으로는 default, rect, circle, poly가 있다

    - link : link tag를 사용하며 문서와 외부 자원을 연결하기 위해 사용
      - <head> 위치에 정의하며 여러 자원을 연결할 수 있다.

  ○ 프레임 요소 - iframe
    - 화면의 일부분에 다른 문서를 포함
    - src 속성은 포함시킬 외부 문서의 경로를 지정

  ○ form control 요소 ★★★
    - 사용자로부터 데이터를 입력 받아 서버에서 처리하기 위한 용도로 사용
    - 사용자의 요청에 따라 서버는 HTML form 을 전달(회원가입양식, 검색 양식 등)
    - 사용자는 HTML form에 적절한 데이터를 입력한 후 서버로 전송. 이를 submint이라 함
    - 서버는 사용자의 요청을 분석한 후 데이터를 등록하거나, 원하는 데이터를 조회하여 결과를 다시 반환

    ○ 개요
       - 사용자가 입력하기 위한 control 요소들은 모두 <form> tag 하위에 위치해야 서버로 전송됨
       - 각 control 요소마다 텍스트 입력, 버튼 클릭 등 다양한 형식으로 입력을 받는다.
       - tag명과 설명
          - form : 사용자에게 입력받을 항목을 정의. form tag 내부에 여러 개의 control 요소를 포함
          - input : 텍스트 box, checkbox, radio 버튼 등 사용자가 데이터를 입력할 수 있도록 함
          - textarea : 여러 줄의 문자를 입력할 수 있도록 함
          - button : 버튼을 표시
          - select : select box
          - optgroup : select box의 각 항목들을 그룹화 함
          - option : select box의 각 항목들을 정의
          - label : 마우스를 이용하여 <input> 항목을 선택 시 편리함을 제공, for 속성을 이용하여 다른 control 요소와
                     텍스트를 연결시켜 더 편리하게 선택할 수 있도록 함
          - fieldset : 입력 항목들을 그룹화 함
          - legend : <fieldset>의 제목을 지정 함

    ○ form
      - 사용자가 입력한 자료들을 어떤 방식으로 서버로 전달할 것인지 결정
      - 서버에서 어떤 프로그램을 이용해 처리할 것인지 결정
      - 속성, 설명
        - method : 사용자가 입력한 내용을 서버 쪽 프로그램으로 어떻게 넘겨줄지 지정
           - 속성값
               - GET : 주소 표시줄에 사용자가 입력한 내용이 표시. 256~2048BYTES(길이 제한)의 데이터만 서버로 전송
               - POST : HTTP 메세지의 Body에 담아서 전송하기 때문에 전송 내용의 길이 제한이 ㅇ벗다.
                          사용자가 입력한 내용이 표시되지 않는다.
        - name : form의 이름을 지정. 한 문서 안에 여러 개의 <form> 태그가 있을 경우, 구분자로 사용
        - action : <form> 태그 안의 내용들을 처리해 줄 서버상의 프로그램 지정(URL)
        - target : <action> 태그에서 지정한 스크립트 파일을 현재 창이 아닌 다른 위치에 열도록 지정
        - autocomplete : 자동 완성 기능

    ○ label - form control에 레이블(텍스트)을 연결
      - 사용법
         <label [속성="속성값"]> 레이블 <input...> </label>
         <label for="id이름"> <input id="id이름" [속성="속성값"]> </label>


  ○ input
    - type 속성에 따라 여러 가지 형태로 화면에 표시
    - id 속성은 여러 번 사용된 폼 요소를 구분하기 위해 사용
    - id 속성 값은 최소한 한 개 이상의 문자여야 하며 공백은 허용 X
    - 같은 html document에서 id는 하나의 값만 가능하고, name은 중복이 허용된다.

  ○ 기타 form control
    - button
      - <button> 태그의 type 속성은 버튼이 활성화 되었을 때 어떤 동작을 할지 지정. 기본은 submit
      - <button [type="submit | reset | button"]>내용</button>
      - input과의 차이점은 <button> 태그는 contents를 포함할 수 있기 떄문에 아이콘을 추가할 수 있고,
        css를 이용하여 원하는 형태로 꾸밀 수 있다.

  ○ 공간 분할 태그
    - div : block 형식으로 공간을 분할. 웹사이트의 레이아웃(전체 틀)을 만들 때 사용
            div 태그를 사용하여 각각의 블록(공간)을 알맞게 배치하고 CSS를 활용하여 스타일을 적용
    - span : inline형식으로 공간을 분할
               <div>와 <p>태그와 함께 웹 페이지의 일부분에 스타일을 적용시키기 위해 사용
   -- 차이점: 1. div와 span을 여러 개를 만들어 나란히 나열하였을떄, div는 자동 줄 바꿈이 일어나면서 세로로
                 span은 줄 바꿈이 일어나지 않고 가로로 나열
                 2. 동일한 문장을 감쌌을 때, div는 박스 형태로 영역이 설정되고 그 안에 정렬
                    하지만 span은 줄 단위로 영역이 결정되기 때문에 박스 형태가 아닌 텍스트가 노출되는 영역만 포함
                 3. div의 margin은 4방향 모두 적용, span은 양 옆으로만 적용


● HTML form
  - 사용자와의 상호작용을 위한 입력 폼
    -> <form method =" " action= " "> : 요청을 받아 처리 할 서버쪽 페이지의 url


● http 프로토콜의 메소드(요청방식)
  - GET : 얻다, 리소스(페이지) 조회용, 간단한 데이터 덧붙임(쿼리 스트링), 보안상 문제없는 데이터 적합
  - POST : 보내다, 데이터를 전송하며 페이지를 요청


● CSS
  - 웹 페이지를 표현하기 위한 스타일 규칙을 모아 놓은 문서
  - CSS 규칙은 선택자와 선언 두 부분으로 구성

      ★★★page 이동 방법★★★
      1. 주소 표시줄 입력(get)
      2. a link(get)
      3. form (get, post)

