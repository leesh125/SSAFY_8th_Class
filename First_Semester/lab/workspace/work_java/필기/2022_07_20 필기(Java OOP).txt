● OOP
  ○ 객체 : 실생활에 존재하는 유/무형의 모든 것
	  상태와 기능을 갖고 있음
	  상태 : 데이터
	  기능 : 동작, 행위
  ○ 클래스 : 객체에 대한 정의, 틀, 청사진, 설계도
                상태 => 변수(멤버)
                기능 => 메서드

● 절차지향 vs 객체지향
절차지향 : 기능 단위로 접근
객체지향 : 객체 단위로 접근

● 클래스
  ○ 멤버변수
    - Instance 변수 : 객체 상태
    - Class 변수 : 클래스 상태

  ○ 메소드
    - Instance 메소드 : 객체로써 수행하는 기능
    - Class 메소드 : 클래스로써 수행하는 기능

  ○ 클래스 선언
    - [접근지정자][활용지정자] class 클래스명 [extends 부모클래스명] [implements 부모 인터페이스명,,,]
    - {   // 내부
          멤버변수
          메소드
          생성자
          클래스(은닉 클래스) 1. private 클래스로 만들기 위해
     }
     
     ※ 용어
     - 접근지정자 : (default), public
     - 활용지정자 : final(상속금지), abstract(추상클래스)


● 객체
  ○ 객체 생성
    - 참조변수 = new 클래스명();
    - 참조변수 = new 생성자호출
    - Person p = new Person( , , );

 ○ 객체 사용(객체 참조)
    - 참조변수 = new 생성자호출
    - 참조변수.멤버변수
    - 참조변수.메소드()

    - ex)
    - Person p = new Person("김재환", 26);
    - Person p2 = new Person("이동욱", 16);
    - p1.age++;

● GC(Garbace Collection)
  - Heap 영역
  - Young 영역(생긴지 얼마 안된것들), Old 영역(오래 살아 있는 것들)
  - Minor gc : Young 영역 -> 이게 더 많이 작동
  - Major gc : Old 영역
  - Mark and Sweep, Compaction(Mark로 지우지 말아야 할 것 marking, Sweep으로 휩쓸기)

● 생성자
  - 객체 생성시 원하는 형태로 초기화된 객체로 만들어준다.
  - 객체 초기화 로직 재사용
  - 작성규칙
    - 이름은 클래스 이름과 같아야한다.
    - 리턴타입이 없다.
    - 오버로딩 가능
    - 상속불가(부모의 생성자가 자식의 생성자의 역할을 할 수 없다.)
    - 생성자가 단 하나도 정의되어 있지 않을 시 컴파일러가 기본생성자를 추가해준다.

● this
  - 현재 실행중인 객체를 가리키기 위한 내장된 참조변수
  1. 지역변수와 객체변수 구분
  2. 생성자안에서 또다른 생성자를 호출
  3. 실행중인 자신의 객체를 자른객체에 전달하는 경우

● 객체 배열
  - 배열의 원소가 참조값으로 이루어진 형태

  - ex)
  - Person p1 = new Person("김재환", 27);
  
  - Person[] persons = new Person[2];
  - persons[0] = p1;
  - persons[1] = new Person("이동욱", 16);

*********************************도서목록*********************************
21424     | Java Pro  | 김하나       | jaen.kr   | 15000 | Java 기본 문법
35355     | 분석설계      | 소나무       | jaen.kr   | 30000 | SW 모델링 