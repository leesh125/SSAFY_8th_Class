● 부분 집합
  - 집합에 포함된 원소들을 선택하는 것
  - 자기 자신과 공집합 포함한 모든 부분집합의 개수는 2^n개

● 탐욕(Greedy) 알고리즘
  - 최적해를 구하는 데 사용되는 근시안적인 방법
  - 가능한 해들 중에서 가장 좋은 해를 찾는 문제

  ● 배낭 짐싸기(knapsack)
    1. knapsack에 대한 완전 검색 방법
      - 완전 검색으로 물건들의 집합 S에 대한 모든 부분집합을 구한다.
      - 부분집합의 총 무게가 W를 초과하는 집합들은 버리고 나머지 집합에서 총 값이 가장 큰 집합을 선택할 수 있다.
      - 물건의 개수가 증가하면 시간 복잡도가 지수적으로 증가 -> 크기 n 부분합의 수 2^n

  ○ 탐욕 알고리즘 필수 요소
    ○ 탐욕적 선택 속성
      - 탐욕적 선택은 최적해로 갈 수 있음
        -> 즉, 탐욕적 선택은 항상 안전
    ○ 최적 부분 구조
      - 최적화 문제를 정형화
        -> 하나의 선택을 하면 풀어야 할 하나의 하위 문제가 남는다.
    ★ 원문제의 최적해 = 탐욕적 선택 + 하위 문제의 최적해 를 증명하라

● 이진 탐색
  - 자료의 가운데에 있는 항목의 키 값과 비교하여 다음 검색의 위치를 결정하고 검색을 계속 진행하는 방법
    - 목적 키를 찾을 때까지 이진 검색을 순환적으로 반복 수행함으로써 검색 범위를 반으로 줄여가면서
      보다 빠르게 검색을 수행함